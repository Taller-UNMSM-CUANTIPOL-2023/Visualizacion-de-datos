knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#boxplot(df_pre$m1) # Boxplot basico de R
bp3 <- ggplot(df_pre, aes(x = n, y = percepcion, color = n)) +
geom_boxplot(outlier.shape = NA) +
coord_flip() + # Volteamos el gráfico
scale_fill_brewer(palette = "Paired") +
theme(legend.position = "top", axis.text.y = element_blank(),
panel.background = element_rect(fill = "white",
colour = "white")) + # Quitamos categorías
geom_jitter(width = 0.5,
colour = 2 ,
shape = 17,
size = 1) + # Agregamos los casos como puntos
labs(title = "Percepción de satisfacción respecto a la labor del presidente Vizcarra",
x = "", y = "Percepción")
bp3
ggplotly(bp3) # Boxplot dinámico
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::include_graphics("./images/logoCUANTIPOL.jpg")
df_lapop <- read_stata("https://github.com/Taller-UNMSM-CUANTIPOL-2023/Visualizacion-de-datos/raw/main/documentos/PER_2021_LAPOP.dta") |>
clean_names() # Takes and returns a data.frame clean
#names(df_lapop) # Nombre de las variables del df
#str(df_lapop) # Estructura del df, tipo de variables
#class(df_lapop) # Tipo del vector
#str(df_lapop$jc15a)
#table(df_lapop$jc15a) # 1: 640, 2: 821
#sum(is.na(df_lapop$jc15a)) # Advertimos NA's: 1577
df_congre <- df_lapop |>
filter(!is.na(jc15a)) |> # Borramos NA's de la columna
mutate(disolucion_c = as.factor(jc15a)) |>
mutate(disolucion_c = factor(disolucion_c, levels = levels(disolucion_c),
labels = c("Si","No")))
df_congre <- df_congre |>
group_by(disolucion_c) |>
count() |>
ungroup() |>
mutate(pcnt = n / sum(n)) |> # Creamos una columna de proporción
arrange(pcnt) |> # Oderna descendentemente
mutate(etiquetas = scales::percent(pcnt)) # Otra columna con el porcentaje
bp = ggplot(df_congre, aes(x = reorder(disolucion_c, n), y = n,
fill = disolucion_c)) +
geom_bar(stat = "identity") + # Data precalculada (transformación estadistica)
scale_fill_brewer(palette = "Paired") + # Color de las barras
coord_flip() +
labs(x = "", y = "Cantidad de entrevistadxs",
title = "Entrevistadxs según si justifica el cierre del congreso",
subtitle = "", caption = "LAPOP, PERU 2021",
fill = "¿Disolución del Congreso?") + # Leyenda
theme(plot.title = element_text(hjust = 0.8)) + # Centrar Título
theme(panel.background = element_rect(fill = "white", colour = "white"))  +
geom_text(aes(label = etiquetas), vjust = 1.5, color = "Black", size = 5)
bp
ggplotly(bp)
#str(df_lapop$q1tb)
#table(df_lapop$q1tb) # 1: 1617, 2: 1418, 3: 3
# Eliminando casos perdidos:
sum(is.na(df_lapop$q1tb)) # NA's: 0
df_sex <- df_lapop |>
filter(!is.na(q1tb)) |> # Borramos NA's de la columna
mutate(sex = as.factor(q1tb)) |>
mutate(sex = factor(sex, levels = levels(sex),
labels = c("Hombre","Mujer", "Otro")))
df_pc <- df_sex |>
group_by(sex) |>
count() |>
ungroup() |>
mutate(pcnt = n / sum(n)) |>
arrange(pcnt) |>
mutate(etiquetas = scales::percent(pcnt))
pc = ggplot(df_pc, aes(x = "", y = pcnt, fill = sex)) +
geom_col(width = 1, color = "white") + # Para los bordes
geom_label(aes(label = etiquetas), position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar("y", start = 0) + # Para convertir la barra en circulo
theme_void() + # Borra todo lo que esta alrededor del grafico
guides(fill = guide_legend(title = "sexo")) +
scale_fill_brewer(palette = "Paired") + # Color del gráfico
labs(x = "", y = "Cantidad de encuestadxs",
title = "Encuestadxs según sexo",
subtitle = "", caption = "LAPOP, PERU 2021",
fill = "¿Disolución del Congreso?")
# Agregamos el título
pc
pc2 <- plot_ly(df_pc,
labels = ~ sex,
values = ~ pcnt,
type = 'pie')
pc2 <- pc2 |>
layout(title = 'Grafico Dinámico Pie',
xaxis = list(showgrid = FALSE,
zeroline = FALSE,
showticklabels = FALSE),
yaxis = list(showgrid = FALSE,
zeroline = FALSE,
showticklabels = FALSE))
pc2
#str(df_lapop$m1)
#table(df_lapop$m1) # 1: 640, 2: 821
#sum(is.na(df_lapop$m1)) # Advertimos NA's: 1577
df_pre <- df_lapop |>
filter(!is.na(m1)) |> # Borramos NA's de la columna
mutate(percepcion = as.factor(m1)) |>
mutate(percepcion = factor(percepcion, levels = levels(percepcion),
labels = c("Muy bueno", "Bueno", "Regular",
"Malo", "Muy malo"), ordered = T))
#table(df_pre$percepcion)
#str(df_pre$percepcion)
df_pre <- df_pre |>
group_by(percepcion) |>
count() |>
ungroup() |>
mutate(pcnt = n / sum(n)) |> # Creamos una columna de proporción
arrange(pcnt) |> # Oderna descendentemente
mutate(etiquetas = scales::percent(pcnt)) # Otra columna con el porcentaje
#df_pre
bp2 = ggplot(df_pre, aes(x = reorder(percepcion, n), y = n,
fill = percepcion)) +
geom_bar(stat = "identity") + # Data precalculada (transformación estadistica)
scale_fill_brewer(palette = "Paired") + # Color de las barras
coord_flip() +
labs(x = "Categorías", y = "Frecuencias",
title = "Entrevistadxs según su percepción de la labor del presidente",
subtitle = "", caption = "LAPOP, PERU 2021",
fill = "Nivel de percepción:") + # Leyenda
theme(plot.title = element_text(hjust = 0.8)) + # Centrar Título
theme(panel.background = element_rect(fill = "white", colour = "white"))  +
geom_text(aes(label = etiquetas), vjust = 1.5, color = "Black", size = 5)
#bp2
ggplotly(bp2)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
rownames(df_pre) = df_pre$n # Etiquetas
#boxplot(df_pre$m1) # Boxplot basico de R
bp3 <- ggplot(df_pre, aes(x = "", y = percepcion, color = "")) +
geom_boxplot(outlier.shape = NA) +
coord_flip() + # Volteamos el gráfico
scale_fill_brewer(palette = "Paired") +
theme(legend.position = "top", axis.text.y = element_blank(),
panel.background = element_rect(fill = "white",
colour = "white")) + # Quitamos categorías
geom_jitter(width = 0.5,
colour = 2 ,
shape = 17,
size = 1) + # Agregamos los casos como puntos
labs(title = "Percepción de satisfacción respecto a la labor del presidente Vizcarra",
x = "", y = "Percepción")
bp3
ggplotly(bp3) # Boxplot dinámico
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#getwd()
#setwd("")
library(rio)
dataoriginal = import("Base de datos CAF 2013.dta")
# Mejor agrupamos en una data:
dataCAF = dataoriginal[,c("k6a", "k7", "m2", "edade", "f1")]
#str(dataCAF)
# Eliminando casos perdidos:
dataCAF = dataCAF[dataCAF$k6a != 97,]
dataCAF = dataCAF[dataCAF$k6a != 99,]
dataCAF = dataCAF[dataCAF$k7 != 97,]
dataCAF = dataCAF[dataCAF$k7 != 99,]
dataCAF = dataCAF[dataCAF$f1 != 97,]
dataCAF = dataCAF[dataCAF$m2 != 98,]
dataCAF = dataCAF[dataCAF$m2 != 99,]
# formateamos:
dataCAF$k6a = as.factor(dataCAF$k6a)
dataCAF$k6a = factor(dataCAF$k6a,
levels = c(1:2),
labels = c("Se encuentra cubierto","No se encuentra cubierto"),
ordered = F)
dataCAF$k7 = as.factor(dataCAF$k7)
dataCAF$k7 = factor(dataCAF$k7,
levels = c(1:3),
labels = c("Utiliza","No utiliza","No tiene"),
ordered = F)
dataCAF$f1 = as.factor(dataCAF$f1)
dataCAF$f1 = factor(dataCAF$f1,
levels = c(1:7),
labels = c("Usted","Usted y su pareja","Usted y otro miembro de la familia","Su pareja","Otro miembro de la familia", "Otra persona", "Nadie"),
ordered = F)
dataCAF$m2 = as.factor(dataCAF$m2)
dataCAF$m2 = factor(dataCAF$m2,
levels = c(1:2),
labels = c("Ha pasado","No ha pasado"),
ordered = F)
# Revisamos estructura:
#str(dataCAF$k6a)
#str(dataCAF$k7)
#str(dataCAF$f1)
#str(dataCAF$m2)
library(Hmisc)
describe(dataCAF$k6a) #Moda
table(dataCAF$k6a)
prop.table(table(dataCAF$k6a))*100
grafico1 <- table(dataCAF$k6a) #creamos un objeto que contenga la tabla de frecuencias de la variable
grafico1 = as.data.frame(grafico1) #dataframe
colnames(grafico1) = c("Reg","Freq") #renombrar
library(ggplot2)
bp = ggplot(grafico1, aes(x=reorder(Reg,Freq), y=Freq, fill=Reg)) + #aes(x=reorder(Reg,Freq) --> así para ordenar las barras ascendentemente
geom_bar(stat = "identity") +
coord_flip() +
labs(title="¿Su dinero se encuentra cubierto / asegurado? ", y="Frecuencias", x="Categorías", subtitle = "", caption = "Fuente: CAF 2013. Elaboración propia.")+
theme(plot.title = element_text(hjust = 1)) +
theme(panel.background=element_rect(fill = "white", colour = "white")) +
geom_text(aes(label=Freq), vjust=0.5, color="Black", size=5) #Frecuencias en las barras
bp
library(Hmisc)
describe(dataCAF$k7) #Moda
table(dataCAF$k7)
prop.table(table(dataCAF$k7))*100
grafico2 <- table(dataCAF$k7) #creamos un objeto que contenga la tabla de frecuencias de la variable
grafico2 = as.data.frame(grafico2) #dataframe
colnames(grafico2) = c("Reg","Freq") #renombrar
library(ggplot2)
bp = ggplot(grafico2, aes(x=reorder(Reg,Freq), y=Freq, fill=Reg)) + #aes(x=reorder(Reg,Freq) --> así para ordenar las barras ascendentemente
geom_bar(stat = "identity") +
coord_flip() +
labs(title="¿Usted utiliza su teléfono celular para realizar pagos por teléfono?", y="Frecuencias", x="Categorías", subtitle = "", caption = "Fuente: CAF 2013. Elaboración propia.")+
theme(plot.title = element_text(hjust = 1)) +
theme(panel.background=element_rect(fill = "white", colour = "white")) +
geom_text(aes(label=Freq), vjust=0.5, color="Black", size=5) #Frecuencias en las barras
bp
library(Hmisc)
describe(dataCAF$m2) #Moda
table(dataCAF$m2)
prop.table(table(dataCAF$m2))*100
grafico3 <- table(dataCAF$m2) #creamos un objeto que contenga la tabla de frecuencias de la variable
grafico3 = as.data.frame(grafico3) #dataframe
colnames(grafico3) = c("Reg","Freq") #renombrar
library(ggplot2)
bp = ggplot(grafico3, aes(x=reorder(Reg,Freq), y=Freq, fill=Reg)) + #aes(x=reorder(Reg,Freq) --> así para ordenar las barras ascendentemente
geom_bar(stat = "identity") +
coord_flip() +
labs(title="¿Sus ingresos le alcanzaron para cubrir sus gastos en los últimos 12 meses?", y="Frecuencias", x="Categorías", subtitle = "", caption = "Fuente: CAF 2013. Elaboración propia")+
theme(plot.title = element_text(hjust = 0.5)) +
theme(panel.background=element_rect(fill = "white", colour = "white")) +
geom_text(aes(label=Freq), vjust=0.5, color="Black", size=5)
bp
table(dataCAF$edade)
prop.table(table(dataCAF$edade))*100
mean(dataCAF$edade, na.rm = T) #media
library(DescTools)
Median(dataCAF$edade, na.rm = T) #Mediana
Mode(dataCAF$edade,na.rm = T)  #Moda
describe(dataCAF$edade) #percentiles y los valores mas altos y más bajos, para sacar outliers.
quantile(dataCAF$edade, na.rm=T)
summary(dataCAF$edade) # Mediana # Media # Percentiles
sd(dataCAF$edade, na.rm = T) #desviación
var(dataCAF$edade, na.rm = T) #varianza
min(dataCAF$edade, na.rm = T) #na.rm = T no considera los valores perdidos
max(dataCAF$edade, na.rm = T)
range(dataCAF$edade, na.rm = T)
IQR(dataCAF$edade, na.rm = T)
library(moments)
skewness(dataCAF$edade, na.rm = T) #asimetría
#hist(dataCAF$edade)
kurtosis(dataCAF$edade, na.rm = T) #curtosis
library(ggplot2)
library(plotly)
p4 <- ggplot(dataCAF, aes(x="", y=edade, color ="")) +
geom_boxplot() + coord_flip() +
theme(legend.position = "top", axis.text.y = element_blank(),
panel.background=element_rect(fill = "white", colour = "white")) +
geom_jitter(shape=16, position=position_jitter(0.2)) +
labs(title = "Edad", x="", y="Index", subtitle = "", caption = "Fuente: CAF 2013. Elaboración propia")
ggplotly(p4)
table(dataCAF$f1)
prop.table(table(dataCAF$f1))*100
grafico4 <- table(dataCAF$f1)
grafico4 = as.data.frame(grafico4)
colnames(grafico4) = c("Reg","Freq")
library(ggplot2)
bp4 = ggplot(grafico4, aes(x=reorder(Reg,Freq), y=Freq, fill=Reg)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title="Responsable del manejo del dinero en el hogar", y="Frecuencias", x="Categorías", subtitle = "", caption = "Fuente: CAF 2013. Elaboración propia")+
theme(plot.title = element_text(hjust = 0.5)) +
theme(panel.background=element_rect(fill = "white", colour = "white")) +
geom_text(aes(label=Freq), vjust=0.5, color="gray", size=5)
bp4
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
h <- ggplot(df_lapop, aes(x = confi_ins, color = 1)) +
geom_histogram(breaks = seq(100), fill = "blue",
alpha = 0.5, position = "identity") +
labs(title = "Confianza en la instituciones", y = "", x = "Index",
subtitle = "", caption = "LAPOP 2021") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(panel.background = element_rect(fill = "white", colour = "white")) +
geom_vline(aes(xintercept = mean(confi_ins, na.rm = T)),
color = "blue",
linetype = "dashed",
size = 1)
h
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::include_graphics("./images/logoCUANTIPOL.jpg")
df_lapop <- read_stata("https://github.com/Taller-UNMSM-CUANTIPOL-2023/Visualizacion-de-datos/raw/main/documentos/PER_2021_LAPOP.dta") |>
clean_names() # Takes and returns a data.frame clean
#names(df_lapop) # Nombre de las variables del df
#str(df_lapop) # Estructura del df, tipo de variables
#class(df_lapop) # Tipo del vector
#str(df_lapop$jc15a)
#table(df_lapop$jc15a) # 1: 640, 2: 821
#sum(is.na(df_lapop$jc15a)) # Advertimos NA's: 1577
df_congre <- df_lapop |>
filter(!is.na(jc15a)) |> # Borramos NA's de la columna
mutate(disolucion_c = as.factor(jc15a)) |>
mutate(disolucion_c = factor(disolucion_c, levels = levels(disolucion_c),
labels = c("Si","No")))
df_congre <- df_congre |>
group_by(disolucion_c) |>
count() |>
ungroup() |>
mutate(pcnt = n / sum(n)) |> # Creamos una columna de proporción
arrange(pcnt) |> # Oderna descendentemente
mutate(etiquetas = scales::percent(pcnt)) # Otra columna con el porcentaje
bp = ggplot(df_congre, aes(x = reorder(disolucion_c, n), y = n,
fill = disolucion_c)) +
geom_bar(stat = "identity") + # Data precalculada (transformación estadistica)
scale_fill_brewer(palette = "Paired") + # Color de las barras
coord_flip() +
labs(x = "", y = "Cantidad de entrevistadxs",
title = "Entrevistadxs según si justifica el cierre del congreso",
subtitle = "", caption = "LAPOP, PERU 2021",
fill = "¿Disolución del Congreso?") + # Leyenda
theme(plot.title = element_text(hjust = 0.8)) + # Centrar Título
theme(panel.background = element_rect(fill = "white", colour = "white"))  +
geom_text(aes(label = etiquetas), vjust = 1.5, color = "Black", size = 5)
bp
ggplotly(bp)
#str(df_lapop$q1tb)
#table(df_lapop$q1tb) # 1: 1617, 2: 1418, 3: 3
# Eliminando casos perdidos:
sum(is.na(df_lapop$q1tb)) # NA's: 0
df_sex <- df_lapop |>
filter(!is.na(q1tb)) |> # Borramos NA's de la columna
mutate(sex = as.factor(q1tb)) |>
mutate(sex = factor(sex, levels = levels(sex),
labels = c("Hombre","Mujer", "Otro")))
df_pc <- df_sex |>
group_by(sex) |>
count() |>
ungroup() |>
mutate(pcnt = n / sum(n)) |>
arrange(pcnt) |>
mutate(etiquetas = scales::percent(pcnt))
pc = ggplot(df_pc, aes(x = "", y = pcnt, fill = sex)) +
geom_col(width = 1, color = "white") + # Para los bordes
geom_label(aes(label = etiquetas), position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar("y", start = 0) + # Para convertir la barra en circulo
theme_void() + # Borra todo lo que esta alrededor del grafico
guides(fill = guide_legend(title = "sexo")) +
scale_fill_brewer(palette = "Paired") + # Color del gráfico
labs(x = "", y = "Cantidad de encuestadxs",
title = "Encuestadxs según sexo",
subtitle = "", caption = "LAPOP, PERU 2021",
fill = "¿Disolución del Congreso?")
# Agregamos el título
pc
pc2 <- plot_ly(df_pc,
labels = ~ sex,
values = ~ pcnt,
type = 'pie')
pc2 <- pc2 |>
layout(title = 'Grafico Dinámico Pie',
xaxis = list(showgrid = FALSE,
zeroline = FALSE,
showticklabels = FALSE),
yaxis = list(showgrid = FALSE,
zeroline = FALSE,
showticklabels = FALSE))
pc2
#str(df_lapop$m1)
#table(df_lapop$m1) # 1: 640, 2: 821
#sum(is.na(df_lapop$m1)) # Advertimos NA's: 1577
df_pre <- df_lapop |>
filter(!is.na(m1)) |> # Borramos NA's de la columna
mutate(percepcion = as.factor(m1)) |>
mutate(percepcion = factor(percepcion, levels = levels(percepcion),
labels = c("Muy bueno", "Bueno", "Regular",
"Malo", "Muy malo"), ordered = T))
#table(df_pre$percepcion)
#str(df_pre$percepcion)
df_pre <- df_pre |>
group_by(percepcion) |>
count() |>
ungroup() |>
mutate(pcnt = n / sum(n)) |> # Creamos una columna de proporción
arrange(pcnt) |> # Oderna descendentemente
mutate(etiquetas = scales::percent(pcnt)) # Otra columna con el porcentaje
#df_pre
bp2 = ggplot(df_pre, aes(x = reorder(percepcion, n), y = n,
fill = percepcion)) +
geom_bar(stat = "identity") + # Data precalculada (transformación estadistica)
scale_fill_brewer(palette = "Paired") + # Color de las barras
coord_flip() +
labs(x = "Categorías", y = "Frecuencias",
title = "Entrevistadxs según su percepción de la labor del presidente",
subtitle = "", caption = "LAPOP, PERU 2021",
fill = "Nivel de percepción:") + # Leyenda
theme(plot.title = element_text(hjust = 0.8)) + # Centrar Título
theme(panel.background = element_rect(fill = "white", colour = "white"))  +
geom_text(aes(label = etiquetas), vjust = 1.5, color = "Black", size = 5)
#bp2
ggplotly(bp2)
rownames(df_pre) = df_pre$n # Etiquetas
#boxplot(df_pre$m1) # Boxplot basico de R
bp3 <- ggplot(df_pre, aes(x = "", y = percepcion, color = "")) +
geom_boxplot(outlier.shape = NA) +
coord_flip() + # Volteamos el gráfico
scale_fill_brewer(palette = "Paired") +
theme(legend.position = "top", axis.text.y = element_blank(),
panel.background = element_rect(fill = "white",
colour = "white")) + # Quitamos categorías
geom_jitter(width = 0.5,
colour = 2 ,
shape = 17,
size = 1) + # Agregamos los casos como puntos
labs(title = "Percepción de satisfacción respecto a la labor del presidente Vizcarra",
x = "", y = "Percepción")
bp3
ggplotly(bp3) # Boxplot dinámico
df_lapop[, c(49, 51, 52, 54)] = lapply(df_lapop[, c(49, 51, 52, 54)], as.numeric) # Convertimos a v. númericas
# Visualizamos un resumen estadistico de cada variable:
df_lapop |>
select(b13, b21, b32, b47a) |>
summary()
#df_lapop$confi_ins = df_lapop$b13 + df_lapop$b21 + df_lapop$b32 + df_lapop$b47a
df_lapop <- df_lapop |>
mutate(confi_ins = b13 + b21 + b32 + b47a)
summary(df_lapop$confi_ins)
df_lapop$confi_ins = ((df_lapop$confi_ins - 4) / 23) * 100
# Restamos el mínimo y divimos entre el máximo ya restado
# y finalmente se multiplica * 100: (Indice aditivo de 0 a 100)
#Resumen del indicador:
summary(df_lapop$confi_ins)
h <- ggplot(df_lapop, aes(x = confi_ins, color = 1)) +
geom_histogram(breaks = seq(100), fill = "blue",
alpha = 0.5, position = "identity") +
labs(title = "Confianza en la instituciones", y = "", x = "Index",
subtitle = "", caption = "LAPOP 2021") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(panel.background = element_rect(fill = "white", colour = "white")) +
geom_vline(aes(xintercept = mean(confi_ins, na.rm = T)),
color = "blue",
linetype = "dashed",
size = 1)
h
ggplotly(h)
bp2 <- ggplot(df_lapop, aes(x = "", y = confi_ins, color = "")) +
geom_boxplot(utlier.shape = NA) +
coord_flip() +
theme(legend.position = "top", axis.text.y = element_blank(),
panel.background = element_rect(fill = "white", colour = "white")) +
geom_jitter(width = 0.2,
color = 2,
shape = 17,
size = 1) +
labs(title = "El apoyo al sistema político según el sexo", x = "", y ="Index",
subtitle = "", caption = "@luccemhu")
#bp2
ggplotly(bp2)
#df_lapop$q1tb <- as.factor(df_lapop$q1tb)
#bp2 <- ggplot(df_lapop, aes(x = q1tb, y = confi_ins, color = q1tb))
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
bp = ggplot(df_congre, aes(x = reorder(disolucion_c, n), y = n,
fill = disolucion_c)) +
geom_bar(stat = "identity") + # Data precalculada (transformación estadistica)
scale_fill_brewer(palette = "Paired") + # Color de las barras
coord_flip() +
labs(x = "", y = "Cantidad de entrevistadxs",
title = "Entrevistadxs según si justifica el cierre del congreso",
subtitle = "", caption = "LAPOP, PERU 2021",
fill = "¿Disolución del Congreso?") + # Leyenda
theme(plot.title = element_text(hjust = 0.8)) + # Centrar Título
theme(panel.background = element_rect(fill = "white", colour = "white"))  +
geom_text(aes(label = etiquetas), vjust = 1.5, color = "Black", size = 5)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::include_graphics("./images/logoCUANTIPOL.jpg")
df_lapop <- read_stata("https://github.com/Taller-UNMSM-CUANTIPOL-2023/Visualizacion-de-datos/raw/main/documentos/PER_2021_LAPOP.dta") |>
clean_names() # Takes and returns a data.frame clean
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
bp = ggplot(df_congre, aes(x = reorder(disolucion_c, n), y = n,
fill = disolucion_c)) +
geom_bar(stat = "identity") + # Data precalculada (transformación estadistica)
scale_fill_brewer(palette = "Paired") + # Color de las barras
coord_flip() +
labs(x = "", y = "Cantidad de entrevistadxs",
title = "Entrevistadxs según si justifica el cierre del congreso",
subtitle = "", caption = "LAPOP, PERU 2021",
fill = "¿Disolución del Congreso?") + # Leyenda
theme(plot.title = element_text(hjust = 0.8)) + # Centrar Título
theme(panel.background = element_rect(fill = "white", colour = "white"))  +
geom_text(aes(label = etiquetas), vjust = 1.5, color = "Black", size = 5)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::include_graphics("./images/logoCUANTIPOL.jpg")
df_lapop <- read_stata("https://github.com/Taller-UNMSM-CUANTIPOL-2023/Visualizacion-de-datos/raw/main/documentos/PER_2021_LAPOP.dta") |>
clean_names() # Takes and returns a data.frame clean
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::include_graphics("./images/logoCUANTIPOL.jpg")
df_lapop <- read_stata("https://github.com/Taller-UNMSM-CUANTIPOL-2023/Visualizacion-de-datos/raw/main/documentos/PER_2021_LAPOP.dta") |>
clean_names() # Takes and returns a data.frame clean
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
